{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","reportWebVitals.js","index.js"],"names":["FlashCard","flashcard","useState","flip","setflip","height","setHeight","frontElement","useRef","backElement","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","onClick","className","style","ref","map","option","FlashCardList","flashcards","id","App","categoryElement","amountRef","setflashcards","categories","setCategories","getdata","axios","get","then","res","data","trivia_categories","console","log","decoder","str","text","document","createElement","innerHTML","value","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","ans","Date","now","sort","random","htmlFor","name","type","step","min","defaultValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ee9bb73.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef } from 'react'\r\n\r\nexport default function FlashCard({flashcard}) {\r\n    const [flip,setflip]=useState(false);\r\n    const [height, setHeight]=useState('0');\r\n    const frontElement = useRef();\r\n    const backElement = useRef();\r\n\r\n const setMaxHeight = ()=>\r\n {\r\n     const frontHeight = frontElement.current.getBoundingClientRect().height;\r\n     const backHeight = backElement.current.getBoundingClientRect().height;\r\n     setHeight(Math.max(frontHeight,backHeight,100));\r\n }\r\n\r\n useEffect(setMaxHeight, [flashcard.question, flashcard.answer, flashcard.options])\r\n useEffect(() => {\r\n    window.addEventListener('resize',setMaxHeight)\r\n\r\n    return () => {\r\n        window.removeEventListener('resize',setMaxHeight)\r\n    }\r\n}, [])\r\n const Flipper =()=>\r\n    {\r\n        setflip(!flip);\r\n    }\r\n    return (\r\n        <div onClick={Flipper} className= {`card ${flip ? 'flip':''}`} style={{height:height}}>\r\n        \r\n        <div className=\"front\" ref={frontElement}>\r\n            {flashcard.question}\r\n            <div className=\"flashcard-options\">\r\n            {flashcard.options.map(option=>{\r\n                return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n            })}\r\n            </div>\r\n        </div>\r\n        <div className=\"back\" ref={backElement}>{flashcard.answer}</div>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FlashCard from './FlashCard'\r\n\r\nexport default function FlashCardList({flashcards}) {\r\n    return (\r\n        <div className=\"card-grid\"> \r\n            {flashcards.map(flashcard => {\r\n                 return <FlashCard flashcard={flashcard} key={flashcard.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect, useRef} from \"react\";\nimport FlashCardList from \"./FlashCardList\";\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n\n  const categoryElement = useRef();\n  const amountRef = useRef();\n  const [flashcards,setflashcards] = useState([]);\n  const [categories,setCategories] = useState([]);\n  \n  useEffect(()=>\n  {\n    getdata();\n  },[])\n\n  const getdata = ()=>\n  {\n   \n    axios\n    .get('https://opentdb.com/api_category.php')\n    .then(res=>{\n      setCategories(res.data.trivia_categories);\n      console.log(res.data);\n    })\n  }\n  \n  const decoder = (str)=>\n  {\n    const text = document.createElement('textarea');\n    text.innerHTML=str;\n    return text.value;\n  }\nconst submitHandler = e =>\n{\n  e.preventDefault();\n  axios\n  .get('https://opentdb.com/api.php',\n  {\n    params:\n    {\n      amount:amountRef.current.value,\n      category:categoryElement.current.value\n\n    }\n  }\n   )\n  .then(res=>{\n   setflashcards( res.data.results.map((questionItem, index)=>{\n      const answer = decoder(questionItem.correct_answer);\n      const options = [...questionItem.incorrect_answers.map(ans=>decoder(ans)), questionItem.correct_answer];\n      return{\n        id:`${index}-${Date.now()}`,\n        question: decoder(questionItem.question),\n        answer: answer, \n        options: options.sort(()=>Math.random-0.5)\n        \n      }\n    }))\n    \n  })\n\n}\n  return (<div className=\"App\"> \n  \n  <form className='header' onSubmit={submitHandler}>\n    <div className='form-group'>\n      <label htmlFor=\"category\">Category</label>\n      <select id=\"category\" ref={categoryElement}>\n      {categories.map(category =>{\n          return <option value={category.id} key={category.id}>{category.name}</option>\n        })}\n      </select>\n    </div>\n    <div className='form-group'>\n    <label htmlFor=\"amount\">Number Of Questions</label>\n    <input type=\"number\" step=\"1\" id=\"amount\" min=\"1\" defaultValue={10} ref={amountRef} />\n    </div>\n    <div className=\"form-group\">\n        <button className=\"btn\">Generate</button>\n    </div>\n  </form>\n   <FlashCardList flashcards={flashcards}/>\n   </div>\n  \n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}